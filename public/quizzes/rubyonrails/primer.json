{
  "title": "Ruby on Rails Web Development",
  "description": "A 30-question quiz to test your knowledge of Ruby on Rails fundamentals and best practices.",
  "time": "20 minutes",
  "headerimage": "/rubyonrails/head.png",

  "questions": [
    {
      "id": 1,
      "question": "What design pattern is Ruby on Rails primarily based on?",
      "options": [
        "Model-View-Controller (MVC)",
        "Observer Pattern",
        "Factory Pattern",
        "Decorator Pattern"
      ],
      "answer": 0,
      "explanation": "Rails is built around the Model-View-Controller (MVC) pattern, which separates concerns into models, views, and controllers."
    },
    {
      "id": 2,
      "question": "What command is used to create a new Rails application?",
      "options": [
        "rails new appname",
        "rails generate app appname",
        "rails create appname",
        "ruby new appname"
      ],
      "answer": 0,
      "explanation": "The correct command is `rails new appname`, which creates a new Rails application with the default structure."
    },
    {
      "id": 3,
      "question": "Which Rails component is responsible for handling database interactions?",
      "options": [
        "Controller",
        "Model",
        "View",
        "Helper"
      ],
      "answer": 1,
      "explanation": "Models in Rails handle business logic and database interactions using ActiveRecord."
    },
    {
      "id": 4,
      "question": "What is the default database used in a new Rails application?",
      "options": [
        "PostgreSQL",
        "MySQL",
        "SQLite",
        "MongoDB"
      ],
      "answer": 2,
      "explanation": "By default, Rails applications are configured to use SQLite for development and testing."
    },
    {
      "id": 5,
      "question": "What command generates a new scaffold in Rails?",
      "options": [
        "rails create scaffold",
        "rails g scaffold",
        "rails new scaffold",
        "rails make scaffold"
      ],
      "answer": 1,
      "explanation": "The command `rails g scaffold` generates a full scaffold including model, controller, views, and migration."
    },
    {
      "id": 6,
      "question": "Which file defines the routes in a Rails application?",
      "options": [
        "routes.rb",
        "config/routes.rb",
        "app/routes.rb",
        "db/routes.rb"
      ],
      "answer": 1,
      "explanation": "All routes are defined in the `config/routes.rb` file."
    },
    {
      "id": 7,
      "question": "What does the 'rails db:migrate' command do?",
      "options": [
        "Rolls back database changes",
        "Runs pending migrations",
        "Creates a new database",
        "Drops the database"
      ],
      "answer": 1,
      "explanation": "`rails db:migrate` applies all pending migrations to the database."
    },
    {
      "id": 8,
      "question": "Which ORM does Rails use by default?",
      "options": [
        "Sequel",
        "ActiveRecord",
        "DataMapper",
        "Mongoid"
      ],
      "answer": 1,
      "explanation": "Rails uses ActiveRecord as its default ORM."
    },
    {
      "id": 9,
      "question": "What command is used to start the Rails server?",
      "options": [
        "rails server",
        "rails start",
        "rails run",
        "rails s"
      ],
      "answer": 0,
      "explanation": "You can start the Rails server with `rails server` or its shorthand `rails s`."
    },
    {
      "id": 10,
      "question": "Which Rails command generates a new model?",
      "options": [
        "rails new model",
        "rails g model",
        "rails make model",
        "rails model create"
      ],
      "answer": 1,
      "explanation": "`rails g model` creates a new model file and corresponding migration."
    },
    {
      "id": 11,
      "question": "Which templating system does Rails use by default?",
      "options": [
        "ERB",
        "Haml",
        "Slim",
        "Mustache"
      ],
      "answer": 0,
      "explanation": "Rails uses Embedded Ruby (ERB) as the default templating system."
    },
    {
      "id": 12,
      "question": "What is the purpose of the Gemfile in a Rails project?",
      "options": [
        "To configure routes",
        "To list project dependencies",
        "To define controllers",
        "To configure the database"
      ],
      "answer": 1,
      "explanation": "The Gemfile lists all gem dependencies required by the Rails project."
    },
    {
      "id": 13,
      "question": "Which command installs gems listed in the Gemfile?",
      "options": [
        "rails gem install",
        "bundle install",
        "gem install all",
        "rails install gems"
      ],
      "answer": 1,
      "explanation": "`bundle install` installs all the gems specified in the Gemfile."
    },
    {
      "id": 14,
      "question": "In Rails, where are database migrations stored?",
      "options": [
        "db/migrations",
        "config/migrations",
        "app/migrations",
        "db/migrate"
      ],
      "answer": 3,
      "explanation": "Migrations are stored in the `db/migrate` directory."
    },
    {
      "id": 15,
      "question": "What does the command 'rails console' do?",
      "options": [
        "Starts the Rails server",
        "Opens an interactive Ruby session with the app loaded",
        "Runs all tests",
        "Generates a scaffold"
      ],
      "answer": 1,
      "explanation": "`rails console` opens an IRB session with the Rails environment loaded."
    },
    {
      "id": 16,
      "question": "Which file configures the database connection in Rails?",
      "options": [
        "config/database.rb",
        "config/db.yml",
        "config/database.yml",
        "db/config.yml"
      ],
      "answer": 2,
      "explanation": "Database connections are configured in `config/database.yml`."
    },
    {
      "id": 17,
      "question": "What command rolls back the last migration in Rails?",
      "options": [
        "rails db:rollback",
        "rails db:revert",
        "rails db:undo",
        "rails db:down"
      ],
      "answer": 0,
      "explanation": "`rails db:rollback` undoes the last database migration."
    },
    {
      "id": 18,
      "question": "What does REST stand for in the context of Rails routes?",
      "options": [
        "Remote Execution of System Tasks",
        "Representational State Transfer",
        "Ruby Execution State Tree",
        "Random Event Service Transfer"
      ],
      "answer": 1,
      "explanation": "REST stands for Representational State Transfer, a style of software architecture used in Rails routing."
    },
    {
      "id": 19,
      "question": "What does 'rails test' do?",
      "options": [
        "Runs the default test suite",
        "Generates new test files",
        "Deletes test data",
        "Runs database migrations"
      ],
      "answer": 0,
      "explanation": "`rails test` runs all test cases in the test suite."
    },
    {
      "id": 20,
      "question": "What helper method generates an HTML form for a model in Rails?",
      "options": [
        "form_with",
        "form_for",
        "form_tag",
        "All of the above"
      ],
      "answer": 3,
      "explanation": "Rails has multiple helpers (`form_with`, `form_for`, and `form_tag`) to generate HTML forms."
    },
    {
      "id": 21,
      "question": "Which command creates a new controller in Rails?",
      "options": [
        "rails g controller",
        "rails controller new",
        "rails make controller",
        "rails add controller"
      ],
      "answer": 0,
      "explanation": "`rails g controller` generates a new controller and view files."
    },
    {
      "id": 22,
      "question": "What does 'rails routes' command display?",
      "options": [
        "The current schema",
        "All database migrations",
        "All defined application routes",
        "All installed gems"
      ],
      "answer": 2,
      "explanation": "`rails routes` lists all available routes in the application."
    },
    {
      "id": 23,
      "question": "What is the default directory for Rails view templates?",
      "options": [
        "app/views",
        "app/templates",
        "config/views",
        "views/"
      ],
      "answer": 0,
      "explanation": "Rails views are stored in the `app/views` directory."
    },
    {
      "id": 24,
      "question": "What is a Rails migration used for?",
      "options": [
        "To change database schema over time",
        "To migrate Rails versions",
        "To move files",
        "To generate routes"
      ],
      "answer": 0,
      "explanation": "Migrations allow you to modify the database schema in a consistent and easy way."
    },
    {
      "id": 25,
      "question": "Which method is used to validate attributes in Rails models?",
      "options": [
        "validates",
        "check",
        "confirm",
        "assert"
      ],
      "answer": 0,
      "explanation": "The `validates` method is used to add validations to model attributes."
    },
    {
      "id": 26,
      "question": "What is the Rails Asset Pipeline used for?",
      "options": [
        "Managing database assets",
        "Compiling and serving static assets like CSS and JavaScript",
        "Handling migration assets",
        "Generating controller assets"
      ],
      "answer": 1,
      "explanation": "The Asset Pipeline manages and compiles static files such as JavaScript, CSS, and images."
    },
    {
      "id": 27,
      "question": "What is the Rails environment variable used to distinguish between development, test, and production?",
      "options": [
        "RAILS_ENV",
        "RAILS_MODE",
        "RAILS_CONFIG",
        "RAILS_STAGE"
      ],
      "answer": 0,
      "explanation": "The `RAILS_ENV` variable specifies the environment (development, test, production)."
    },
    {
      "id": 28,
      "question": "What Rails feature provides CSRF protection by default?",
      "options": [
        "before_action",
        "protect_from_forgery",
        "csrf_guard",
        "security_helper"
      ],
      "answer": 1,
      "explanation": "`protect_from_forgery` is included in Rails controllers by default to prevent CSRF attacks."
    },
    {
      "id": 29,
      "question": "Where are Rails helper modules typically stored?",
      "options": [
        "app/helpers",
        "config/helpers",
        "db/helpers",
        "lib/helpers"
      ],
      "answer": 0,
      "explanation": "Helper modules are placed inside the `app/helpers` directory."
    },
    {
      "id": 30,
      "question": "Which command is used to generate a new migration file?",
      "options": [
        "rails g migration",
        "rails new migration",
        "rails make migration",
        "rails db migration new"
      ],
      "answer": 0,
      "explanation": "`rails g migration` generates a new migration file."
    }
  ]
}
