{
  "title": "ESP32 Microcontroller Basics Quiz",
  "description": "Test your knowledge of ESP32 microcontrollers with this 20-question quiz.",
  "time": "10 minutes",
  "questions": [
    {
      "id": 1,
      "question": "What company developed the ESP32 microcontroller?",
      "options": [
        "Espressif Systems",
        "Arduino",
        "Microchip Technology",
        "STMicroelectronics"
      ],
      "answer": 0,
      "explanation": "The ESP32 was developed by Espressif Systems, a Chinese company specializing in wireless communications."
    },
    {
      "id": 2,
      "question": "What is the primary architecture of the ESP32?",
      "options": [
        "Xtensa dual-core (and single-core) LX6",
        "ARM Cortex-M4",
        "AVR 8-bit",
        "PIC32"
      ],
      "answer": 0,
      "explanation": "The ESP32 is based on the Xtensa dual-core (and single-core) LX6 microprocessor architecture."
    },
    {
      "id": 3,
      "question": "What wireless communication protocols does the ESP32 support natively?",
      "options": [
        "Wi-Fi and Bluetooth",
        "Zigbee and LoRa",
        "NFC and RFID",
        "Cellular and GPS"
      ],
      "answer": 0,
      "explanation": "The ESP32 natively supports Wi-Fi (802.11 b/g/n) and Bluetooth (Classic and BLE)."
    },
    {
      "id": 4,
      "question": "What is the clock speed of the ESP32?",
      "options": [
        "Up to 240 MHz",
        "Up to 160 MHz",
        "Up to 80 MHz",
        "Up to 48 MHz"
      ],
      "answer": 0,
      "explanation": "The ESP32 can run at clock speeds up to 240 MHz, though it can be adjusted for power savings."
    },
    {
      "id": 5,
      "question": "How many GPIO pins does the ESP32 typically have?",
      "options": [
        "34-48, depending on the variant",
        "14 digital I/O pins",
        "20 analog input pins",
        "54 general-purpose I/O pins"
      ],
      "answer": 0,
      "explanation": "The ESP32 typically has between 34 to 48 GPIO pins, depending on the specific module variant."
    },
    {
      "id": 6,
      "question": "What programming languages can be used to develop for the ESP32?",
      "options": [
        "C/C++, MicroPython, and Arduino IDE",
        "Only Assembly",
        "Java and Kotlin",
        "Only Python"
      ],
      "answer": 0,
      "explanation": "The ESP32 can be programmed using C/C++, MicroPython, and the Arduino IDE."
    },
    {
      "id": 7,
      "question": "What is the main advantage of the ESP32 over the ESP8266?",
      "options": [
        "Dual-core processing, more GPIOs, and Bluetooth support",
        "Lower power consumption",
        "Smaller form factor",
        "Cheaper price"
      ],
      "answer": 0,
      "explanation": "The ESP32 offers dual-core processing, more GPIO pins, and Bluetooth support, which the ESP8266 lacks."
    },
    {
      "id": 8,
      "question": "Which of these is NOT a feature of the ESP32?",
      "options": [
        "Built-in camera",
        "Hall effect sensor",
        "Touch sensors",
        "Temperature sensor"
      ],
      "answer": 0,
      "explanation": "The ESP32 does not have a built-in camera, though it can interface with external camera modules."
    },
    {
      "id": 9,
      "question": "What is the typical flash memory size in an ESP32 module?",
      "options": ["4 MB (though sizes can vary)", "128 KB", "1 MB", "8 MB"],
      "answer": 0,
      "explanation": "Most ESP32 modules come with 4 MB of flash memory, though sizes can vary depending on the specific model."
    },
    {
      "id": 10,
      "question": "What voltage level do ESP32 GPIOs typically operate at?",
      "options": ["3.3V", "5V", "1.8V", "12V"],
      "answer": 0,
      "explanation": "ESP32 GPIOs are not 5V-tolerant and typically operate at 3.3V."
    },
    {
      "id": 11,
      "question": "Which development framework is commonly used for ESP32 programming?",
      "options": [
        "ESP-IDF (Espressif IoT Development Framework)",
        "Arduino IDE only",
        ".NET Framework",
        "Node.js"
      ],
      "answer": 0,
      "explanation": "ESP-IDF is Espressif's official development framework for the ESP32, though the Arduino IDE is also popular."
    },
    {
      "id": 12,
      "question": "What is deep sleep mode in the ESP32?",
      "options": [
        "A low-power mode that turns off most of the chip, including the CPU",
        "A mode that increases the clock speed for better performance",
        "A mode that enables all wireless radios simultaneously",
        "A debugging mode for firmware development"
      ],
      "answer": 0,
      "explanation": "Deep sleep mode turns off most of the ESP32, including the CPU, to minimize power consumption."
    },
    {
      "id": 13,
      "question": "How can you wake the ESP32 from deep sleep?",
      "options": [
        "Using an external interrupt, timer, or touch pad",
        "By pressing the reset button",
        "By sending a Wi-Fi command",
        "By connecting to a computer via USB"
      ],
      "answer": 0,
      "explanation": "The ESP32 can be woken from deep sleep using an external interrupt, timer, or touch pad."
    },
    {
      "id": 14,
      "question": "What is the purpose of the ESP32's ADC (Analog-to-Digital Converter)?",
      "options": [
        "To read analog voltages from sensors",
        "To convert digital signals to analog signals",
        "To boost the voltage for high-power applications",
        "To regulate the power supply"
      ],
      "answer": 0,
      "explanation": "The ADC in the ESP32 is used to read analog voltages from sensors and other inputs."
    },
    {
      "id": 15,
      "question": "Which of these peripherals is NOT typically found in the ESP32?",
      "options": [
        "VGA controller",
        "SPI interface",
        "I2C interface",
        "UART interface"
      ],
      "answer": 0,
      "explanation": "The ESP32 does not have a built-in VGA controller, though it supports SPI, I2C, and UART interfaces."
    },
    {
      "id": 16,
      "question": "What is the maximum number of PWM outputs the ESP32 supports?",
      "options": [
        "16 independent channels",
        "4 channels",
        "8 channels",
        "32 channels"
      ],
      "answer": 0,
      "explanation": "The ESP32 supports up to 16 independent PWM output channels."
    },
    {
      "id": 17,
      "question": "What is the purpose of the ESP32's DAC (Digital-to-Analog Converter)?",
      "options": [
        "To convert digital signals to analog voltages",
        "To increase the clock speed",
        "To manage Wi-Fi connections",
        "To store program data"
      ],
      "answer": 0,
      "explanation": "The DAC in the ESP32 converts digital signals to analog voltages, useful for applications like audio output."
    },
    {
      "id": 18,
      "question": "Which of these is a common use case for the ESP32?",
      "options": [
        "IoT devices and wireless sensors",
        "High-performance gaming PCs",
        "Industrial PLCs (Programmable Logic Controllers)",
        "Supercomputing clusters"
      ],
      "answer": 0,
      "explanation": "The ESP32 is commonly used in IoT devices and wireless sensors due to its Wi-Fi/Bluetooth capabilities and low cost."
    },
    {
      "id": 19,
      "question": "What is the purpose of the ESP32's RTC (Real-Time Clock)?",
      "options": [
        "To keep track of time even in deep sleep mode",
        "To manage real-time operating systems",
        "To synchronize with GPS satellites",
        "To control the Wi-Fi radio timing"
      ],
      "answer": 0,
      "explanation": "The RTC in the ESP32 keeps track of time even when the chip is in deep sleep mode."
    },
    {
      "id": 20,
      "question": "Which of these ESP32 modules is known for its small size and built-in antenna?",
      "options": ["ESP32-WROOM-32", "ESP32-S2", "ESP32-C3", "ESP32-P4"],
      "answer": 0,
      "explanation": "The ESP32-WROOM-32 is a popular module known for its small size and built-in PCB antenna."
    },
    {
      "id": 21,
      "question": "What is the purpose of the ESP32's UART interface?",
      "options": [
        "For serial communication with other devices",
        "For wireless communication",
        "For analog signal processing",
        "For power management"
      ],
      "answer": 0,
      "explanation": "The UART interface in the ESP32 is used for serial communication with other devices."
    },
    {
      "id": 22,
      "question": "How can you program an ESP32?",
      "options": [
        "Using a USB-to-serial adapter",
        "Only through wireless OTA (Over-The-Air) updates",
        "Using an Arduino as an ISP (In-System Programmer)",
        "By replacing the flash memory chip"
      ],
      "answer": 0,
      "explanation": "The ESP32 is typically programmed using a USB-to-serial adapter connected to its UART interface."
    },
    {
      "id": 23,
      "question": "What is the purpose of the ESP32's boot button?",
      "options": [
        "To put the ESP32 into firmware upload mode",
        "To reset the Wi-Fi connection",
        "To enable Bluetooth pairing",
        "To increase the CPU clock speed"
      ],
      "answer": 0,
      "explanation": "The boot button is used to put the ESP32 into firmware upload mode for programming."
    },
    {
      "id": 24,
      "question": "Which of these is a power-saving feature of the ESP32?",
      "options": [
        "Dynamic voltage scaling",
        "Always running at maximum clock speed",
        "Disabling all peripherals permanently",
        "Using only external power supplies"
      ],
      "answer": 0,
      "explanation": "Dynamic voltage scaling is a power-saving feature that adjusts the voltage and clock speed based on demand."
    },
    {
      "id": 25,
      "question": "What is the purpose of the ESP32's partition table?",
      "options": [
        "To define how flash memory is divided into different sections",
        "To manage Wi-Fi connections",
        "To store GPIO configurations",
        "To control the bootloader"
      ],
      "answer": 0,
      "explanation": "The partition table defines how the ESP32's flash memory is divided into sections for the bootloader, application, and data storage."
    },
    {
      "id": 26,
      "question": "Which of these is NOT a variant of the ESP32?",
      "options": ["ESP8266", "ESP32-S2", "ESP32-S3", "ESP32-C3"],
      "answer": 0,
      "explanation": "The ESP8266 is a separate microcontroller from Espressif and not a variant of the ESP32."
    },
    {
      "id": 27,
      "question": "What is the purpose of the ESP32's MAC address?",
      "options": [
        "To uniquely identify the device on a network",
        "To manage memory allocation",
        "To control the ADC resolution",
        "To store Wi-Fi credentials"
      ],
      "answer": 0,
      "explanation": "The MAC address uniquely identifies the ESP32 on a network for Wi-Fi and Ethernet communication."
    },
    {
      "id": 28,
      "question": "Which of these sensors is NOT typically built into the ESP32?",
      "options": [
        "Ambient light sensor",
        "Hall effect sensor",
        "Temperature sensor",
        "Capacitive touch sensors"
      ],
      "answer": 0,
      "explanation": "The ESP32 does not have a built-in ambient light sensor, though it includes a Hall effect sensor, temperature sensor, and capacitive touch sensors."
    }
  ]
}
